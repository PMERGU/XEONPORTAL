//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2016.02.29 at 06:44:09 PM SAST
//

package za.co.xeon.external.ocr.dto.xsd.result;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for TextType complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="TextType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="par" type="{http://www.abbyy.com/FineReader_xml/FineReader10-schema-v1.xml}ParagraphType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="orientation" default="Normal">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="Normal"/>
 *             &lt;enumeration value="RotatedClockwise"/>
 *             &lt;enumeration value="RotatedUpsidedown"/>
 *             &lt;enumeration value="RotatedCounterclockwise"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="backgroundColor" type="{http://www.w3.org/2001/XMLSchema}integer" default="16777215" />
 *       &lt;attribute name="mirrored" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="inverted" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TextType", propOrder = { "par" })
public class TextType {

	protected List<ParagraphType> par;
	@XmlAttribute(name = "id")
	protected String id;
	@XmlAttribute(name = "orientation")
	protected String orientation;
	@XmlAttribute(name = "backgroundColor")
	protected BigInteger backgroundColor;
	@XmlAttribute(name = "mirrored")
	protected Boolean mirrored;
	@XmlAttribute(name = "inverted")
	protected Boolean inverted;

	/**
	 * Gets the value of the par property.
	 *
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the par property.
	 *
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getPar().add(newItem);
	 * </pre>
	 *
	 *
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ParagraphType }
	 *
	 *
	 */
	public List<ParagraphType> getPar() {
		if (par == null) {
			par = new ArrayList<ParagraphType>();
		}
		return this.par;
	}

	/**
	 * Gets the value of the id property.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	public String getId() {
		return id;
	}

	/**
	 * Sets the value of the id property.
	 *
	 * @param value
	 *            allowed object is {@link String }
	 *
	 */
	public void setId(String value) {
		this.id = value;
	}

	/**
	 * Gets the value of the orientation property.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	public String getOrientation() {
		if (orientation == null) {
			return "Normal";
		} else {
			return orientation;
		}
	}

	/**
	 * Sets the value of the orientation property.
	 *
	 * @param value
	 *            allowed object is {@link String }
	 *
	 */
	public void setOrientation(String value) {
		this.orientation = value;
	}

	/**
	 * Gets the value of the backgroundColor property.
	 *
	 * @return possible object is {@link BigInteger }
	 *
	 */
	public BigInteger getBackgroundColor() {
		if (backgroundColor == null) {
			return new BigInteger("16777215");
		} else {
			return backgroundColor;
		}
	}

	/**
	 * Sets the value of the backgroundColor property.
	 *
	 * @param value
	 *            allowed object is {@link BigInteger }
	 *
	 */
	public void setBackgroundColor(BigInteger value) {
		this.backgroundColor = value;
	}

	/**
	 * Gets the value of the mirrored property.
	 *
	 * @return possible object is {@link Boolean }
	 *
	 */
	public boolean isMirrored() {
		if (mirrored == null) {
			return false;
		} else {
			return mirrored;
		}
	}

	/**
	 * Sets the value of the mirrored property.
	 *
	 * @param value
	 *            allowed object is {@link Boolean }
	 *
	 */
	public void setMirrored(Boolean value) {
		this.mirrored = value;
	}

	/**
	 * Gets the value of the inverted property.
	 *
	 * @return possible object is {@link Boolean }
	 *
	 */
	public boolean isInverted() {
		if (inverted == null) {
			return false;
		} else {
			return inverted;
		}
	}

	/**
	 * Sets the value of the inverted property.
	 *
	 * @param value
	 *            allowed object is {@link Boolean }
	 *
	 */
	public void setInverted(Boolean value) {
		this.inverted = value;
	}

}
